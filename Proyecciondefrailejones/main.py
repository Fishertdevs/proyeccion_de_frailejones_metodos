import streamlit as st
import pandas as pd
import numpy as np
import plotly.graph_objects as go
import plotly.express as px
from streamlit_folium import st_folium
import streamlit.components.v1 as components
import json
from models import (
    calculate_biodiversity_impact, 
    calculate_crop_production, 
    create_ecosystem_simulation
)
from visualizations import (
    plot_frailejon_crop_relationship,
    plot_frailejon_crop_relationship_3d,
    plot_biodiversity_impact,
    plot_biodiversity_impact_3d,
    plot_timeseries_forecast,
    create_risk_map
)
from data_module import get_initial_data
from utils import get_emoji, add_vertical_space

# Page configuration
st.set_page_config(
    page_title="Simulador de Impacto de Frailejones en Colombia",
    page_icon="üåø",
    layout="wide",
    initial_sidebar_state="expanded"
)

# Custom CSS para tema claro/verde natural
st.markdown("""
<style>
    .main {
        background-color: #f8fffe;
    }
    .main-header {
        font-size: 2.8rem;
        color: #2d5016;
        text-align: center;
        font-weight: bold;
        margin-bottom: 20px;
    }
    .sub-header {
        font-size: 1.8rem;
        color: #4a7c2a;
        font-weight: 600;
        margin-bottom: 15px;
    }
    .description {
        font-size: 1.1rem;
        line-height: 1.6;
        color: #2c5530;
    }
    .highlight {
        background-color: #7cb342;
        color: white;
        padding: 0.3rem;
        border-radius: 0.3rem;
        font-weight: bold;
    }
    .card {
        background-color: #ffffff;
        padding: 2rem;
        border-radius: 1rem;
        box-shadow: 0 4px 12px rgba(76, 175, 80, 0.15);
        margin-bottom: 1.5rem;
        border: 1px solid #c8e6c9;
    }
    .info-box {
        background-color: #e8f5e8;
        border-left: 5px solid #4caf50;
        padding: 1.5rem;
        margin: 1.5rem 0;
        border-radius: 0 0.5rem 0.5rem 0;
    }
    .metric-card {
        background-color: #f1f8e9;
        padding: 1.5rem;
        border-radius: 1rem;
        box-shadow: 0 3px 8px rgba(76, 175, 80, 0.2);
        text-align: center;
        border: 2px solid #aed581;
    }

    /* Estilo para los botones y widgets */
    .stButton button {
        background-color: #4caf50 !important;
        color: white !important;
        border: none !important;
        border-radius: 0.5rem !important;
        padding: 0.5rem 1rem !important;
        font-weight: bold !important;
    }

    .stButton button:hover {
        background-color: #45a049 !important;
    }

    .stSlider .stSlider-track {
        background-color: #4caf50 !important;
    }

    /* Estilos para el dashboard */
    .dashboard-header {
        background: linear-gradient(135deg, #4caf50 0%, #66bb6a 100%);
        padding: 15px;
        border-radius: 10px;
        color: white;
        text-align: center;
        margin-bottom: 20px;
        font-weight: bold;
    }

    .dashboard-card {
        background-color: #ffffff;
        border: 2px solid #4caf50;
        border-radius: 10px;
        padding: 20px;
        margin-bottom: 15px;
        box-shadow: 0 2px 8px rgba(76, 175, 80, 0.15);
    }

    /* Ajustes para el contraste de texto */
    h1, h2, h3, h4, h5, h6 {
        color: #2d5016 !important;
    }

    p, li, span {
        color: #2c5530 !important;
    }

    /* Secci√≥n de avances espec√≠fica */
    .avances-section {
        background: linear-gradient(135deg, #e8f5e8 0%, #f1f8e9 100%);
        border: 2px solid #4caf50;
        border-radius: 15px;
        padding: 25px;
        margin: 20px 0;
    }

    .avance-item {
        background-color: #ffffff;
        border-left: 4px solid #4caf50;
        padding: 15px;
        margin: 10px 0;
        border-radius: 0 8px 8px 0;
        box-shadow: 0 2px 6px rgba(76, 175, 80, 0.1);
    }

    .corte-header {
        background: linear-gradient(90deg, #4caf50 0%, #66bb6a 100%);
        color: white;
        padding: 10px 15px;
        border-radius: 8px;
        margin: 15px 0 10px 0;
        font-weight: bold;
    }
</style>
""", unsafe_allow_html=True)

# Funci√≥n para cargar/guardar avances
def load_avances():
    """Cargar avances desde archivo o usar valores por defecto"""
    try:
        with open('avances_data.json', 'r', encoding='utf-8') as f:
            return json.load(f)
    except FileNotFoundError:
        return {
            "primer_corte": [
                "Revisi√≥n bibliogr√°fica sobre el papel de los frailejones en los ecosistemas de p√°ramo",
                "Identificaci√≥n de especies de frailejones end√©micas de Colombia",
                "An√°lisis preliminar de la distribuci√≥n geogr√°fica de los frailejones",
                "Definici√≥n de par√°metros iniciales para el modelo matem√°tico",
                "Implementaci√≥n de la estructura b√°sica de la aplicaci√≥n en Streamlit"
            ],
            "segundo_corte": [
                "Desarrollo del modelo matem√°tico para simular el impacto de la p√©rdida de frailejones",
                "Implementaci√≥n de ecuaciones diferenciales para modelar la din√°mica del ecosistema",
                "Creaci√≥n de visualizaciones 2D para mostrar relaciones entre variables",
                "Integraci√≥n de datos espec√≠ficos de regiones colombianas (Boyac√°, Cundinamarca, etc.)",
                "Validaci√≥n preliminar del modelo con datos reales de p√°ramos"
            ],
            "tercer_corte": [
                "Desarrollo de visualizaciones 3D interactivas con Plotly",
                "Implementaci√≥n del mapa de riesgo con Folium para p√°ramos colombianos",
                "Creaci√≥n de m√©tricas econ√≥micas y de biodiversidad espec√≠ficas",
                "Desarrollo de la interfaz de usuario final con controles avanzados",
                "Documentaci√≥n completa del proyecto y validaci√≥n final del modelo"
            ]
        }

def save_avances(avances_data):
    """Guardar avances en archivo"""
    with open('avances_data.json', 'w', encoding='utf-8') as f:
        json.dump(avances_data, f, ensure_ascii=False, indent=2)

# Header
st.markdown(f"<h1 class='main-header'>üåø Impacto de la P√©rdida de Frailejones en Ecosistemas de P√°ramo - Colombia</h1>", unsafe_allow_html=True)

# Introduction
with st.container():
    st.markdown("<div class='card'>", unsafe_allow_html=True)
    st.markdown("<h2 class='sub-header'>Sobre esta aplicaci√≥n</h2>", unsafe_allow_html=True)
    st.markdown("""
    <p class='description'>
    Esta aplicaci√≥n modela el impacto cr√≠tico de la disminuci√≥n de las poblaciones de frailejones en la biodiversidad y 
    la regulaci√≥n h√≠drica de los p√°ramos colombianos. A trav√©s de visualizaciones interactivas y modelos matem√°ticos 
    basados en m√©todos num√©ricos, podr√°s explorar c√≥mo los cambios en las poblaciones de frailejones afectan a los 
    ecosistemas de alta monta√±a y los servicios ecosist√©micos que proporcionan.
    </p>
    """, unsafe_allow_html=True)

    st.markdown("""
    <div class='info-box'>
    <p>Los frailejones son especies end√©micas de los p√°ramos neotropicales, responsables de la regulaci√≥n del 
    <span class='highlight'>70% del agua que abastece a Bogot√°</span> y otras ciudades andinas, adem√°s de albergar 
    <span class='highlight'>m√°s del 60% de la biodiversidad de alta monta√±a</span> en Colombia, con un valor ecosist√©mico 
    estimado de <span class='highlight'>15-25 mil millones de d√≥lares anuales</span> en servicios ambientales.
    </p>
    </div>
    """, unsafe_allow_html=True)
    st.markdown("</div>", unsafe_allow_html=True)

# Secci√≥n de Avances - Universidad Central 2025-2S
st.markdown("<div class='avances-section'>", unsafe_allow_html=True)
st.markdown("<h2 class='sub-header'>üìö Avances del Proyecto - M√©todos Num√©ricos</h2>", unsafe_allow_html=True)
st.markdown("<p class='description'><strong>Universidad Central - 2025 Segundo Semestre</strong></p>", unsafe_allow_html=True)

# Cargar avances existentes
avances = load_avances()

# Editor de avances
with st.expander("‚úèÔ∏è Editar Avances del Proyecto", expanded=False):
    st.info("Puedes modificar los avances de cada corte. Los cambios se guardar√°n autom√°ticamente.")

    # Primer Corte
    st.markdown("<div class='corte-header'>Primer Corte</div>", unsafe_allow_html=True)
    primer_corte_text = st.text_area(
        "Avances del Primer Corte:",
        value="\n".join([f"‚Ä¢ {avance}" for avance in avances["primer_corte"]]),
        height=150,
        key="primer_corte"
    )

    # Segundo Corte
    st.markdown("<div class='corte-header'>Segundo Corte</div>", unsafe_allow_html=True)
    segundo_corte_text = st.text_area(
        "Avances del Segundo Corte:",
        value="\n".join([f"‚Ä¢ {avance}" for avance in avances["segundo_corte"]]),
        height=150,
        key="segundo_corte"
    )

    # Tercer Corte
    st.markdown("<div class='corte-header'>Tercer Corte</div>", unsafe_allow_html=True)
    tercer_corte_text = st.text_area(
        "Avances del Tercer Corte:",
        value="\n".join([f"‚Ä¢ {avance}" for avance in avances["tercer_corte"]]),
        height=150,
        key="tercer_corte"
    )

    if st.button("üíæ Guardar Cambios", type="primary"):
        # Procesar y guardar los cambios
        nuevo_avances = {
            "primer_corte": [line.strip("‚Ä¢ ").strip() for line in primer_corte_text.split("\n") if line.strip()],
            "segundo_corte": [line.strip("‚Ä¢ ").strip() for line in segundo_corte_text.split("\n") if line.strip()],
            "tercer_corte": [line.strip("‚Ä¢ ").strip() for line in tercer_corte_text.split("\n") if line.strip()]
        }
        save_avances(nuevo_avances)
        st.success("¬°Avances guardados correctamente!")
        st.rerun()

# Mostrar avances actuales
col_avances1, col_avances2, col_avances3 = st.columns(3)

with col_avances1:
    st.markdown("<div class='corte-header'>ü•á Primer Corte</div>", unsafe_allow_html=True)
    for avance in avances["primer_corte"]:
        st.markdown(f"<div class='avance-item'>‚Ä¢ {avance}</div>", unsafe_allow_html=True)

with col_avances2:
    st.markdown("<div class='corte-header'>ü•à Segundo Corte</div>", unsafe_allow_html=True)
    for avance in avances["segundo_corte"]:
        st.markdown(f"<div class='avance-item'>‚Ä¢ {avance}</div>", unsafe_allow_html=True)

with col_avances3:
    st.markdown("<div class='corte-header'>ü•â Tercer Corte</div>", unsafe_allow_html=True)
    for avance in avances["tercer_corte"]:
        st.markdown(f"<div class='avance-item'>‚Ä¢ {avance}</div>", unsafe_allow_html=True)

st.markdown("</div>", unsafe_allow_html=True)

# Main content in two columns
col1, col2 = st.columns([2, 3])

# Left column - Controls and information
with col1:
    st.markdown("<div class='card'>", unsafe_allow_html=True)
    st.markdown("<h2 class='sub-header'>Controles de Simulaci√≥n</h2>", unsafe_allow_html=True)

    # Slider for frailej√≥n population adjustment
    frailejon_population_percentage = st.slider(
        "Porcentaje de poblaci√≥n de frailejones respecto al nivel √≥ptimo",
        min_value=10,
        max_value=100,
        value=100,
        step=5,
        help="Ajusta el porcentaje de la poblaci√≥n de frailejones para ver el impacto en el p√°ramo"
    )

    # Additional parameters
    st.markdown("<h3>Par√°metros del Ecosistema</h3>", unsafe_allow_html=True)

    selected_region = st.selectbox(
        "P√°ramo/Regi√≥n de Colombia",
        options=["Todos los p√°ramos", "P√°ramo de Sumapaz", "P√°ramo de Chingaza", "P√°ramo de Guerrero", 
                "P√°ramo de Rabanal", "P√°ramo de Pisba", "P√°ramo de Almorzadero", "P√°ramo de Santurb√°n"],
        help="Selecciona un p√°ramo espec√≠fico para analizar"
    )

    years_to_simulate = st.slider(
        "A√±os a simular",
        min_value=1,
        max_value=50,
        value=15,
        step=1
    )

    ecosystem_resilience = st.select_slider(
        "Resiliencia del p√°ramo",
        options=["Muy baja", "Baja", "Media", "Alta", "Muy alta"],
        value="Media",
        help="Capacidad del p√°ramo para recuperarse ante perturbaciones"
    )

    climate_scenario = st.radio(
        "Escenario clim√°tico",
        options=["Estable", "Calentamiento moderado", "Calentamiento severo"],
        horizontal=True,
        help="Escenario de cambio clim√°tico para la simulaci√≥n"
    )

    # Convert resilience to numerical value for calculations
    resilience_mapping = {
        "Muy baja": 0.2,
        "Baja": 0.4,
        "Media": 0.6,
        "Alta": 0.8,
        "Muy alta": 1.0
    }
    resilience_value = resilience_mapping[ecosystem_resilience]

    st.markdown("</div>", unsafe_allow_html=True)

    # Importance of frailejones section
    st.markdown("<div class='card'>", unsafe_allow_html=True)
    st.markdown("<h2 class='sub-header'>Importancia de los Frailejones</h2>", unsafe_allow_html=True)
    st.markdown("""
    <p class='description'>
    Los frailejones son fundamentales para los p√°ramos porque:
    </p>
    <ul>
        <li><strong>Regulaci√≥n h√≠drica:</strong> Capturan y almacenan agua de la niebla y precipitaci√≥n.</li>
        <li><strong>Biodiversidad:</strong> Crean microh√°bitats √∫nicos para especies end√©micas.</li>
        <li><strong>Servicios ecosist√©micos:</strong> Proporcionan agua limpia a millones de personas.</li>
        <li><strong>Captura de carbono:</strong> Almacenan grandes cantidades de carbono en sus tejidos y suelos.</li>
    </ul>
    """, unsafe_allow_html=True)

    with st.expander("¬øPor qu√© est√°n en peligro los frailejones?"):
        st.markdown("""
        <p class='description'>
        Las principales amenazas para los frailejones incluyen:
        </p>
        <ul>
            <li><strong>Cambio clim√°tico</strong>: Aumento de temperatura en p√°ramos.</li>
            <li><strong>Miner√≠a</strong>: Degradaci√≥n de h√°bitats por actividades extractivas.</li>
            <li><strong>Agricultura</strong>: Expansi√≥n de cultivos hacia zonas de p√°ramo.</li>
            <li><strong>Incendios forestales</strong>: Destrucci√≥n de poblaciones completas.</li>
            <li><strong>Urbanizaci√≥n</strong>: Fragmentaci√≥n de ecosistemas de p√°ramo.</li>
        </ul>
        """, unsafe_allow_html=True)
    st.markdown("</div>", unsafe_allow_html=True)

# Right column - Visualizations
with col2:
    # Calculate impacts based on the slider and parameters
    biodiversity_impact = calculate_biodiversity_impact(frailejon_population_percentage, resilience_value)
    water_regulation_impact = calculate_crop_production(frailejon_population_percentage)  # Reutilizamos la funci√≥n
    ecosystem_data = create_ecosystem_simulation(frailejon_population_percentage, years_to_simulate, resilience_value)

    # Metrics display
    st.markdown("<div class='card'>", unsafe_allow_html=True)
    st.markdown("<h2 class='sub-header'>Impacto Calculado</h2>", unsafe_allow_html=True)

    metric_col1, metric_col2, metric_col3 = st.columns(3)
    with metric_col1:
        st.markdown("<div class='metric-card'>", unsafe_allow_html=True)

        climate_modifier = 1.0
        if climate_scenario == "Calentamiento moderado":
            climate_modifier = 0.9
        elif climate_scenario == "Calentamiento severo":
            climate_modifier = 0.75

        adjusted_water_impact = min(100, water_regulation_impact * climate_modifier)

        st.metric(
            label="Regulaci√≥n H√≠drica",
            value=f"{adjusted_water_impact:.1f}%",
            delta=f"{adjusted_water_impact - 100:.1f}%" if frailejon_population_percentage < 100 else None,
            delta_color="inverse"
        )
        st.markdown("</div>", unsafe_allow_html=True)

    with metric_col2:
        st.markdown("<div class='metric-card'>", unsafe_allow_html=True)

        region_modifier = 1.0
        region_name = "Colombia"

        if selected_region == "P√°ramo de Sumapaz":
            region_modifier = 1.2
            region_name = "Sumapaz"
        elif selected_region == "P√°ramo de Chingaza":
            region_modifier = 1.15
            region_name = "Chingaza"
        elif selected_region == "P√°ramo de Santurb√°n":
            region_modifier = 1.3
            region_name = "Santurb√°n"

        adjusted_biodiversity = biodiversity_impact * region_modifier
        adjusted_biodiversity = min(100, adjusted_biodiversity)

        st.metric(
            label=f"Biodiversidad en {region_name}",
            value=f"{adjusted_biodiversity:.1f}%",
            delta=f"{adjusted_biodiversity - 100:.1f}%" if frailejon_population_percentage < 100 else None,
            delta_color="inverse"
        )
        st.markdown("</div>", unsafe_allow_html=True)

    with metric_col3:
        st.markdown("<div class='metric-card'>", unsafe_allow_html=True)

        base_species = 3000  # Especies de p√°ramo
        if selected_region != "Todos los p√°ramos":
            if selected_region in ["P√°ramo de Sumapaz", "P√°ramo de Chingaza"]:
                base_species = 1200
            else:
                base_species = 800

        species_at_risk = int(max(0, 100 - frailejon_population_percentage) * 0.25 * base_species / 100)

        st.metric(
            label="Especies en Riesgo",
            value=f"{species_at_risk:,}",
            delta=f"+{species_at_risk}" if frailejon_population_percentage < 100 else "0",
            delta_color="inverse"
        )
        st.markdown("</div>", unsafe_allow_html=True)

    # Add additional metrics
    st.markdown("<div style='padding: 10px;'>", unsafe_allow_html=True)
    metric_col4, metric_col5 = st.columns(2)

    with metric_col4:
        st.markdown("<div class='metric-card'>", unsafe_allow_html=True)

        water_base = 450  # Millones de litros/d√≠a
        if selected_region != "Todos los p√°ramos":
            if selected_region in ["P√°ramo de Chingaza", "P√°ramo de Sumapaz"]:
                water_base = 180
            else:
                water_base = 80

        water_loss = water_base * (max(0, 100 - frailejon_population_percentage) / 100)

        st.metric(
            label="P√©rdida de Regulaci√≥n H√≠drica",
            value=f"{water_loss:.1f}M L/d√≠a",
            delta=f"-{water_loss:.1f}M" if frailejon_population_percentage < 100 else "0",
            delta_color="inverse"
        )
        st.markdown("</div>", unsafe_allow_html=True)

    with metric_col5:
        st.markdown("<div class='metric-card'>", unsafe_allow_html=True)

        carbon_base = 15000  # Toneladas CO2
        if selected_region != "Todos los p√°ramos":
            if selected_region in ["P√°ramo de Sumapaz", "P√°ramo de Chingaza"]:
                carbon_base = 6000
            else:
                carbon_base = 3000

        carbon_loss = int(carbon_base * (max(0, 100 - frailejon_population_percentage) / 100) * 0.6)

        st.metric(
            label="P√©rdida de Captura CO2",
            value=f"{carbon_loss:,} Ton",
            delta=f"-{carbon_loss:,}" if frailejon_population_percentage < 100 else "0",
            delta_color="inverse"
        )
        st.markdown("</div>", unsafe_allow_html=True)

    st.markdown("</div>", unsafe_allow_html=True)
    st.markdown("</div>", unsafe_allow_html=True)

    # Visualizations
    st.markdown("<div class='card'>", unsafe_allow_html=True)
    st.markdown("<h2 class='sub-header'>Relaci√≥n Frailejones - Servicios Ecosist√©micos</h2>", unsafe_allow_html=True)

    viz_type = st.radio(
        "Selecciona tipo de visualizaci√≥n",
        options=["Gr√°fico 2D", "Modelo 3D Interactivo"],
        horizontal=True,
        key="frailejon_viz_type"
    )

    if viz_type == "Gr√°fico 2D":
        fig_relationship = plot_frailejon_crop_relationship(frailejon_population_percentage)
        st.plotly_chart(fig_relationship, use_container_width=True)

        st.markdown("""
        <p class='description'>
        El gr√°fico muestra la relaci√≥n cr√≠tica entre la poblaci√≥n de frailejones y los servicios ecosist√©micos 
        del p√°ramo. La p√©rdida de frailejones tiene efectos exponenciales en la regulaci√≥n h√≠drica y 
        la biodiversidad del ecosistema.
        </p>
        """, unsafe_allow_html=True)
    else:
        fig_relationship_3d = plot_frailejon_crop_relationship_3d(frailejon_population_percentage, years_to_simulate)
        st.plotly_chart(fig_relationship_3d, use_container_width=True)

        st.markdown("""
        <p class='description'>
        Esta visualizaci√≥n 3D muestra c√≥mo evoluciona el impacto en los servicios ecosist√©micos a lo largo del tiempo
        seg√∫n diferentes niveles de poblaci√≥n de frailejones. El punto rojo indica tu configuraci√≥n actual.
        </p>
        """, unsafe_allow_html=True)
    st.markdown("</div>", unsafe_allow_html=True)

# Footer personalizado para Universidad Central
add_vertical_space(2)
st.markdown("""
<div style="background: linear-gradient(135deg, #4caf50 0%, #66bb6a 100%); color: white; text-align: center; padding: 20px; border-radius: 10px; margin-top: 30px;">
<h3 style="color: white !important; margin-bottom: 10px;">üéì Proyecto de M√©todos Num√©ricos</h3>
<p style="color: white !important; margin: 0; font-size: 1.1rem;">Universidad Central - Facultad de Ingenier√≠a</p>
<p style="color: white !important; margin: 0; font-size: 1rem;">Segundo Semestre 2025 | Simulaci√≥n de Ecosistemas de P√°ramo</p>
<p style="color: white !important; margin-top: 10px; font-size: 0.9rem;">Desarrollado para la conservaci√≥n de frailejones en Colombia üåø</p>
</div>
""", unsafe_allow_html=True)